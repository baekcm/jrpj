<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="communitySql">

	<!-- 자유게시판 게시데이터 목록수 조회 -->
	<select id="communityListTotCnt" parameterType="com.jnet.domain.BbsFileReply" resultType="Integer">
		SELECT 
			COUNT(*)  
	    FROM (
	    	SELECT 
	    		*
	     	  	,(SELECT b.code_id from jongno_comm_code b where a.comm_code_seq = b.comm_code_seq) codeId
		   	FROM 
		   		JONGNO_BOARD_DATA a
		  	WHERE a.board_seq = #{boardSeq}
		  	AND a.use_yn = 'Y'
		  	
		<if test='commCodeSeq != null and commCodeSeq != ""'>
			AND a.comm_code_seq = #{commCodeSeq}
	   	</if>
		  		<!-- 
	   	   		-->
		  	
		  		<if test='searchVal != null and searchVal != "" '>
			    	<if test='searchKey == "subject"'>
			    		AND a.subject like  '%' + #{searchVal} + '%'
			    	</if>
			    	<if test='searchKey == "content"'>
			    		AND a.content like  '%' + #{searchVal} + '%'
			    	</if>
			    	<if test='searchKey == "name"'>
			    		AND a.create_nm like  '%' + #{searchVal} + '%'
			    	</if>
    	   		</if>
    	   	) T1
    </select>
    

	<!-- 자유게시판 게시데이터 목록 조회 -->
	<select id="communityList" parameterType="com.jnet.domain.BbsFileReply" resultType="com.jnet.domain.BbsFileReply">
		<!-- sqlserver 2005 over sql 
    	<![CDATA[
    		SELECT 
    			c.*
	    	FROM
			    (
			    SELECT 
			    	T2.*, 
			    	ROWNUM RNUM
			    FROM
			    	(
			    	SELECT 
			    		T1.*, 
			    		ROW_NUMBER() OVER (ORDER BY dataSeq DESC) AS rownum
			    	FROM 
				    	(
				    	SELECT  
				    		a.data_seq dataSeq
				    		,a.board_seq boardSeq
				    		,a.subject
				    		,a.create_nm createNm
				    		,a.create_ymd createYmd
				    		,(SELECT b.board_type FROM jongno_board b WHERE a.board_seq = b.board_seq) boardType 
				    		,(SELECT b.code_nm from jongno_comm_code b where a.comm_code_seq = b.comm_code_seq) codeNm
				    		,(SELECT b.code_id from jongno_comm_code b where a.comm_code_seq = b.comm_code_seq) codeId
				    		,CASE 
							   	WHEN (SELECT b.board_type FROM jongno_board b WHERE a.board_seq = b.board_seq) = 'GALL'	THEN (SELECT TOP 1 c.file_path + c.real_file_nm  FROM jongno_file c WHERE c.data_seq = a.data_seq AND thumb_yn = 'Y')
								WHEN (SELECT b.board_type FROM jongno_board b WHERE a.board_seq = b.board_seq) = 'LOSE'	THEN (SELECT c.file_path + c.real_file_nm  FROM jongno_file c WHERE c.data_seq = a.data_seq AND thumb_yn = 'Y')
								ELSE null
							END filePathNm
							,a.learn_ymd learnYmd
							,a.learn_area learnArea
							,a.learn_store_yn learnStoreYn
							,a.hitnum
						FROM 
							JONGNO_BOARD_DATA a
	 					WHERE a.board_seq = #{boardSeq}
	 					AND a.use_yn = 'Y'
	 					]]>

					<if test='commCodeSeq != null and commCodeSeq != ""'>
						AND a.comm_code_seq = #{commCodeSeq}
				   	</if>
	 					
			   	<if test='searchVal != null and searchVal != ""  '>
				  	<if test='searchKey == "subject"'>
				    		AND a.subject like  '%' + #{searchVal} + '%'
				    </if>
				    <if test='searchKey == "content"'>
				    		AND a.content like  '%' + #{searchVal} + '%'
				    </if>
				    <if test='searchKey == "name"'>
				    		AND a.create_nm like  '%' + #{searchVal} + '%'
				    </if>
	   	   		</if>
	 				) T1
			<![CDATA[ 
			   	) T2
			WHERE rownum <= #{end}
			) c
		WHERE RNUM >= #{start}
		]]>
		-->
		<![CDATA[
    		SELECT 
    			c.*
	    	FROM
			    (
			    SELECT 
			    	TOP ${showPage} T2.* 
			    FROM
			    	(
			    	SELECT 
			    		TOP ${currentPage} T1.*
			    	FROM 
				    	(
				    	SELECT  
				    		a.data_seq dataSeq
				    		,a.board_seq boardSeq
				    		,a.subject
				    		,a.create_nm createNm
				    		,a.create_ymd createYmd
				    		,(SELECT b.board_type FROM jongno_board b WHERE a.board_seq = b.board_seq) boardType 
				    		,(SELECT b.code_nm from jongno_comm_code b where a.comm_code_seq = b.comm_code_seq) codeNm
				    		,(SELECT b.code_id from jongno_comm_code b where a.comm_code_seq = b.comm_code_seq) codeId
				    		,CASE 
							   	WHEN (SELECT b.board_type FROM jongno_board b WHERE a.board_seq = b.board_seq) = 'GALL'	THEN (SELECT TOP 1 c.file_path + c.real_file_nm  FROM jongno_file c WHERE c.data_seq = a.data_seq AND thumb_yn = 'Y')
								WHEN (SELECT b.board_type FROM jongno_board b WHERE a.board_seq = b.board_seq) = 'LOSE'	THEN (SELECT c.file_path + c.real_file_nm  FROM jongno_file c WHERE c.data_seq = a.data_seq AND thumb_yn = 'Y')
								ELSE null
							END filePathNm
							,a.learn_ymd learnYmd
							,a.learn_area learnArea
							,a.learn_store_yn learnStoreYn
							,a.hitnum
						FROM 
							JONGNO_BOARD_DATA a
	 					WHERE a.board_seq = #{boardSeq}
	 					AND a.use_yn = 'Y'
	 					]]>

					<if test='commCodeSeq != null and commCodeSeq != ""'>
						AND a.comm_code_seq = #{commCodeSeq}
				   	</if>
	 					
			   	<if test='searchVal != null and searchVal != ""  '>
				  	<if test='searchKey == "subject"'>
				    		AND a.subject like  '%' + #{searchVal} + '%'
				    </if>
				    <if test='searchKey == "content"'>
				    		AND a.content like  '%' + #{searchVal} + '%'
				    </if>
				    <if test='searchKey == "name"'>
				    		AND a.create_nm like  '%' + #{searchVal} + '%'
				    </if>
	   	   		</if>
	 				) T1
	 		ORDER BY dataSeq DESC		
			<![CDATA[ 
			   	) T2
			ORDER BY dataSeq   	
			) c
		ORDER BY dataSeq DESC
		]]>			 
    </select>
    
    
    <!-- 자유게시판 게시데이터 상세조회 -->
    <select id="communityView" parameterType="com.jnet.domain.BbsFileReply" resultType="com.jnet.domain.BbsFileReply">
    	SELECT 
    		a.data_seq dataSeq
			,a.board_seq boardSeq
			,aa.menu_seq menuSeq
			,a.subject
			,a.content
			,a.create_nm createNm
			,a.create_ymd createYmd
			,a.create_hms createHms
			,a.learn_ymd learnYmd
			,a.learn_area learnArea
			,a.learn_store_yn learnStoreYn
			,a.url_nm urlNm
			,a.comm_code_seq commCodeSeq
			,a.cat_gbn_cd catGbnCd
			,a.hitnum
			,b.file_path filePath
			,b.orgnl_file_nm orgnlFileNm
			,b.real_file_nm realFileNm
			,b.file_seq fileSeq
			,b.thumb_yn thumbYn
			,aa.board_type boardType
			,aa.cat_cd_yn catCdYn
			,aa.board_nm boardNm
			,aa.pgm_cat_cd_yn pgmCatCdYn
			,aa.grp_cat_cd_yn grpCatCdYn
			,(SELECT b.code_nm from jongno_comm_code b where a.comm_code_seq = b.comm_code_seq) codeNm
		FROM 
			JONGNO_BOARD aa, JONGNO_BOARD_DATA a
		LEFT OUTER JOIN JONGNO_FILE b
		ON a.DATA_SEQ = b.DATA_SEQ
		WHERE  AA.board_seq = a.board_seq
		AND a.board_seq = #{boardSeq}
		AND a.data_seq = #{dataSeq}
		AND aa.use_yn = 'Y'
		AND a.use_yn = 'Y'
    </select>
    
    
    <!-- 자유게시판 게시데이터 상세조회 내의 이전 글 -->
    <select id="communityPrev" parameterType="com.jnet.domain.BbsFileReply" resultType="com.jnet.domain.BbsFileReply">
    	SELECT top 1 
    		board_seq boardSeq,
			data_seq dataSeq,
			subject
		From
			JONGNO_BOARD_DATA a
		WHERE a.board_seq = #{boardSeq}
	<![CDATA[ 
		AND data_seq < #{dataSeq}
	]]>
		ORDER BY data_seq DESC
    </select>
    
    
    <!-- 자유게시판 게시데이터 상세조회 내의 다음 글 -->
    <select id="communityNext" parameterType="com.jnet.domain.BbsFileReply" resultType="com.jnet.domain.BbsFileReply">
    	SELECT top 1 
    		board_seq boardSeq,
			data_seq dataSeq,
			subject
		From 
			JONGNO_BOARD_DATA a
		WHERE a.board_seq = #{boardSeq}
	<![CDATA[
		AND data_seq > #{dataSeq}
	]]>
		ORDER BY data_seq ASC
    </select>
    
    
    <!-- 자유게시판 게시물 저장 -->
    <insert id="saveCommunityData" parameterType="com.jnet.domain.BbsFileReply" useGeneratedKeys="true" keyProperty="dataSeq">
    	INSERT INTO jongno_board_data
    	(
    		subject
	    	,content
	    	,create_id
	    	,create_ip
	    	,create_ymd
	    	,create_hms
	    	,modi_id
	    	,modi_ip
	    	,modi_ymd
	    	,modi_hms
	    	,use_yn
	    	,hitnum
	    	,board_seq
	    	,create_nm
	    	,modi_nm
	    	,comm_code_seq
	    	,url_nm
	    	,cat_gbn_cd
	    	,learn_ymd
	    	,learn_area
	    	,learn_store_yn
	    )
		VALUES
		(
			#{subject}
		    ,#{content}
		    ,#{createId}
		    ,#{createIp}
		    ,#{createYmd}
		    ,#{createHms}
		    ,#{createId}
		    ,#{createIp}
		    ,#{createYmd}
		    ,#{createHms}
		    ,'Y'
		    ,0
		    ,#{boardSeq}
		    ,#{createNm}
		    ,#{createNm}
		    ,#{commCodeSeq}
		    ,#{urlNm}
		    ,#{catGbnCd}
		    ,#{learnYmd}
		    ,#{learnArea}
		    ,#{learnStoreYn}
		)
    </insert>
    
    <!-- 자유게시판 게시물 파일 저장 -->
    <insert id="saveCommunityFile" parameterType="com.jnet.domain.BbsFileReply">
    	INSERT INTO jongno_file
    	(
    		file_path
	    	,orgnl_file_nm
	    	,real_file_nm
	    	,file_size
	    	,create_id
	    	,create_ip
	    	,create_ymd
	    	,create_hms
	    	,modi_id
	    	,modi_ip
	    	,modi_ymd
	    	,modi_hms
	    	,rm_yn
	    	,data_seq
	    	,thumb_yn
	    )
		VALUES
		(
			#{filePath}
		   	,#{orgnlFileNm}
		   	,#{realFileNm}
		   	,#{fileSize}
		   	,#{createId}
		   	,#{createIp}
		   	,#{createYmd}
		   	,#{createHms}
		   	,#{createId}
		   	,#{createIp}
		   	,#{createYmd}
		   	,#{createHms}
		   	,'N'
		   	,#{dataSeq}
		  	,#{thumbYn}
		)
    </insert>
    
    <!-- 자유게시판 게시글에 대한 댓글 목록 수 조회 -->
	<select id="communityCommentListTotCnt" parameterType="com.jnet.domain.BbsFileReply" resultType="Integer">
		SELECT 
			COUNT(*)
   		FROM  
   			jongno_reply
   		WHERE data_seq = #{dataSeq}
   		AND use_yn = 'Y'
    </select>
    
    <!-- 자유게시판 게시글에 대한 댓글 목록 조회 -->
	<select id="communityCommentList" parameterType="com.jnet.domain.BbsFileReply" resultType="com.jnet.domain.BbsFileReply">
    	<![CDATA[
    	SELECT 
    		c.*
	    FROM
			(
			SELECT 
				T1.*
				, ROWNUM RNUM
			FROM
			    (
			    SELECT 
			    	reply_seq replySeq
		    		,reply_content replyContent
		    		,create_id createId
		    		,create_nm createNm
		    		,create_ymd createYmd
		    		,data_seq dataSeq
		    	    ,(SELECT COUNT(t1.reply_seq)+1 FROM jongno_reply t1 WHERE t1.reply_seq > jongno_reply.reply_seq AND t1.data_seq = #{dataSeq} AND t1.use_yn = 'Y' ) as rownum
    			FROM  jongno_reply
    		   	WHERE data_seq = #{dataSeq}
    		    AND use_yn = 'Y' 
	    	 	) T1
	      	WHERE rownum <= #{end}
			) c
		WHERE RNUM >= #{start}
		ORDER BY replySeq DESC
		]]>			 
    </select>
    
    <!-- 자유게시판 게시물 한줄 댓글 저장 -->
    <insert id="saveCommunityCommentData" parameterType="com.jnet.domain.BbsFileReply" useGeneratedKeys="true" keyProperty="dataSeq">
    	INSERT INTO jongno_reply
    	(
    		reply_content
    	 	,create_id
    	 	,create_ip
    	 	,create_ymd
    	 	,create_hms
    	 	,create_nm
    	 	,modi_id
    	 	,modi_ip
    	 	,modi_ymd
    	 	,modi_hms
    	 	,modi_nm
    	 	,data_seq
    	 	,use_yn
    	)
		VALUES
		(
			#{replyContent}
		    ,#{createId}
		    ,#{createIp}
		    ,#{createYmd}
		    ,#{createHms}
		    ,#{createNm}
		    ,#{createId}
		    ,#{createIp}
		    ,#{createYmd}
		    ,#{createHms}
		    ,#{createNm}
		    ,#{dataSeq}
		    ,'Y'
		)
    </insert>

    <!-- 자유게시판 게시물 수정 -->
    <update id="updateCommunityData" parameterType="com.jnet.domain.BbsFileReply">
    	UPDATE 
    		JONGNO_BOARD_DATA
    	SET 
    		subject = #{subject}
    	   ,content = #{content}
    	   ,modi_id = #{modiId}
    	   ,modi_ip = #{modiIp}
    	   ,modi_ymd = #{modiYmd}
    	   ,modi_hms = #{modiHms}
    	   ,comm_code_seq = #{commCodeSeq}
    	   ,url_nm = #{urlNm}
    	   ,cat_gbn_cd = #{catGbnCd}
    	   ,learn_ymd = #{learnYmd}
    	   ,learn_area = #{learnArea}
    	   ,learn_store_yn = #{learnStoreYn}
    	WHERE board_seq = #{boardSeq}
    	AND data_seq = #{dataSeq}
    </update>
    
    <!-- 자유게시판 목록 조회한 파일정보 삭제 -->
    <delete id="removeCommunityFile" parameterType="com.jnet.domain.BbsFileReply">
		DELETE FROM jongno_file WHERE data_seq = #{dataSeq}
    </delete>
    
    <!-- 자유게시판 게시물 한줄 댓글 삭제 -->
    <update id="removeCommunityComment" parameterType="com.jnet.domain.BbsFileReply">
		UPDATE 
			jongno_reply
		SET 
			use_yn = 'N'
		   ,modi_id = #{modiId}
	       ,modi_ip = #{modiIp}
	       ,modi_ymd = #{modiYmd}
	       ,modi_hms = #{modiHms}
	       ,modi_nm = #{modiNm}
		WHERE data_seq = #{dataSeq}
		AND reply_seq = #{replySeq}    
    </update>
    
    <!-- 자유게시판 게시물 삭제 -->
    <update id="removeCommunityData" parameterType="com.jnet.domain.BbsFileReply">
	   	UPDATE JONGNO_BOARD_DATA SET use_yn = 'N' WHERE board_seq = #{boardSeq} AND data_seq = #{dataSeq}
    </update>
    
</mapper>